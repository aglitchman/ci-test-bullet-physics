diff --git a/build_tools/sdk.py b/build_tools/sdk.py
index 75d8864a2f..7b95642388 100644
--- a/build_tools/sdk.py
+++ b/build_tools/sdk.py
@@ -71,8 +71,8 @@ ANDROID_64_NDK_API_VERSION='21' # Android 5.0
 # Win32
 
 # The version we have prepackaged
-VERSION_WINDOWS_SDK_10="10.0.20348.0"
-VERSION_WINDOWS_MSVC_2022="14.37.32822"
+VERSION_WINDOWS_SDK_10="10.0.26100.0"
+VERSION_WINDOWS_MSVC_2022="14.44.35207"
 PACKAGES_WIN32_TOOLCHAIN=f"Microsoft-Visual-Studio-2022-{VERSION_WINDOWS_MSVC_2022}"
 PACKAGES_WIN32_SDK_10=f"WindowsKits-{VERSION_WINDOWS_SDK_10}"
 
diff --git a/engine/gamesys/src/gamesys/components/bullet3d/comp_collision_object_bullet3d.cpp b/engine/gamesys/src/gamesys/components/bullet3d/comp_collision_object_bullet3d.cpp
index 6b88707a93..c8fc996ec3 100644
--- a/engine/gamesys/src/gamesys/components/bullet3d/comp_collision_object_bullet3d.cpp
+++ b/engine/gamesys/src/gamesys/components/bullet3d/comp_collision_object_bullet3d.cpp
@@ -77,6 +77,8 @@ namespace dmGameSystem
     {
         DM_STATIC_ASSERT(sizeof(ShapeInfo::m_BoxDimensions) <= sizeof(dmVMath::Vector3), Invalid_Struct_Size);
 
+        dmLogInfo("Bullet Physics 3D - patched version");
+
         PhysicsContextBullet3D* physics_context = (PhysicsContextBullet3D*) params.m_Context;
         if (params.m_MaxComponentInstances == 0 || physics_context->m_Context == 0x0)
         {
diff --git a/scripts/build.py b/scripts/build.py
index ed172050f9..cd0f572678 100755
--- a/scripts/build.py
+++ b/scripts/build.py
@@ -2362,8 +2362,15 @@ class Configuration(object):
 
 
     def upload_to_archive(self, src_file, dst_path):
-        url = join(self.get_archive_path(), dst_path).replace("\\", "/")
-        self.upload_to_s3(src_file, url)
+        print("<!> upload_to_archive: src_file %s, dst_path %s" % (src_file, dst_path))
+        dst = os.path.join(self.defold_root, self.dynamo_home, "archive")
+        print("                       dst %s" % dst)
+        self._mkdirs(os.path.join(dst, os.path.dirname(dst_path)))
+        print("                       mkdirs %s" % os.path.join(dst, os.path.dirname(dst_path)))
+        if os.path.isdir(src_file):
+            self._copy_tree(src_file, os.path.join(dst, dst_path))
+        else:
+            self._copy(src_file, os.path.join(dst, dst_path))
 
 
     def download_from_s3(self, path, url):
